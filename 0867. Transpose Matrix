Given a matrix A, return the transpose of A.

The transpose of a matrix is the matrix flipped over it's main diagonal, switching the row and column indices of the matrix.

Example 1:

Input: [[1,2,3],[4,5,6],[7,8,9]]
Output: [[1,4,7],[2,5,8],[3,6,9]]
Example 2:

Input: [[1,2,3],[4,5,6]]
Output: [[1,4],[2,5],[3,6]]
 
Note:

1 <= A.length <= 1000
1 <= A[0].length <= 1000

class Solution:
    def transpose(self, A: List[List[int]]) -> List[List[int]]:
        import numpy as np
        return np.transpose(A)
        
class Solution:
    def transpose(self, A):
        res = []
        for i in range(len(A[0])):
            temp = []
            for j in range(len(A)):
                temp.append(A[j][i])
            res.append(temp)
        return res

class Solution:
    def transpose(self, A: List[List[int]]) -> List[List[int]]:
        m = len(A)
        n = len(A[0])
        
        B = [[0]*m for _ in range(n)]
        
        for i in range(m):
            for j in range(n):
                B[j][i] = A[i][j]
        
        return B
