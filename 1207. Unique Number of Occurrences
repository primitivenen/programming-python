Given an array of integers arr, write a function that returns true if and only if the number of occurrences of each value in the array is unique.

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 
Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000

class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        import collections
        counter = collections.Counter(arr)
        ret = set()
        for k, v in counter.items():
            if v not in ret:
                ret.add(v)
            else:
                return False
        return True
   
   class Solution:
  def uniqueOccurrences(self, arr: List[int]) -> bool:
    from collections import Counter
    counts = Counter(arr).values()
    return len(counts) == len(set(counts))
