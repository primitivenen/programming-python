Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

Example 1:

Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9 

Constraints:

n == height.length
0 <= n <= 3 * 104
0 <= height[i] <= 105

class Solution:
    def trap(self, height: List[int]) -> int:
        length = len(height) 
        peak_index = 0
        for i in range(length):
            if height[i] > height[peak_index]:
                peak_index = i
                
        water = 0
        leftMostBar = 0
        for i in range(peak_index):
            if height[i] > leftMostBar:
                leftMostBar = height[i]
            else:
                water = water + leftMostBar - height[i]
        
        rightMostBar = 0
        for i in range(length-1, peak_index, -1):
            if height[i] > rightMostBar:
                rightMostBar = height[i]
            else:
                water = water + rightMostBar - height[i]
                
        return water
            
